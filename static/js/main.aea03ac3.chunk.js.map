{"version":3,"sources":["reportWebVitals.js","components/Alert.js","components/Header.js","components/TextContiner.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Alert","alert","class","type","role","msg","Header","className","style","color","fontSize","fontWeight","letterSpacing","href","TextContiner","showAlert","useState","text","setText","modalIsOpen","setIsOpen","isCopied","setIsCopied","onChange","e","target","value","height","id","onClick","toUpperCase","toLowerCase","newText","split","join","length","toFixed","border","classNam","isOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","width","backgroundColor","overlay","background","navigator","clipboard","writeText","setInterval","App","setAlert","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea03ac3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nfunction Alert({ alert }) {\r\n    return (\r\n\r\n        alert && <div class={`alert alert-${alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong> {alert.type} </strong> {alert.msg}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-success bg-success\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" style={{color:\"white\",fontSize:\"25px\", fontWeight:800, letterSpacing:\"1.5px\"}} href=\"/\">TEXTMODI</a>\r\n                    \r\n                    {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\" style={{color:\"white\"}}>Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/about\" style={{color:\"white\"}}>About</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div> */}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nfunction TextContiner({showAlert}) {\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [modalIsOpen, setIsOpen] = useState(false)\r\n    const [isCopied, setIsCopied] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        setText(e.target.value)\r\n        \r\n    }\r\n\r\n    const handleUpperCase = () => {\r\n        setText(text.toUpperCase())\r\n        showAlert(\"success\", \"Uppercase successfully\")\r\n    }\r\n\r\n    const handleLowerCase = () => {\r\n        setText(text.toLowerCase())\r\n        showAlert(\"success\", \"Lowrecase successfully\")\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setText(\"\")\r\n        showAlert(\"success\", \"Clear successfully\")\r\n    }\r\n\r\n    const handleRmExSpaces = () => {\r\n        let newText =  text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        showAlert(\"success\", \"Remove Extra Spaces successfully\")\r\n    }\r\n\r\n    function openModal() {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            border: \"1px solid gray\",\r\n            width: \"70vw\",\r\n            height: \"70vh\",\r\n            backgroundColor: \"rgb(255 255 255)\",\r\n        },\r\n\r\n        overlay: {\r\n            background: \"rgb(41 41 41 / 32%)\"\r\n        }\r\n    }\r\n\r\n\r\n    // Modal.setAppElement(document.getElementById('root'))\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"form-floating container1\">\r\n                    <h1 className=\"heading\">Text Modifier</h1>\r\n                    <textarea onChange={handleChange} value={text} style={{ height: \"20rem\" }} className=\"form-control text-area\" id=\"floatingTextarea2\"></textarea>\r\n                </div>\r\n                <div className=\"btnsdiv\">\r\n                    <button className=\"button\" onClick={handleUpperCase}>To Uppercase</button>\r\n                    <button className=\"button\" onClick={handleLowerCase}>To Lowercase</button>\r\n                    <button className=\"button\" onClick={handleClear}>Clear</button>\r\n                    <button className=\"button\" onClick={handleRmExSpaces}>Remove Extra Spaces</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"summarycont\">\r\n                <h1>Your text summary</h1>\r\n                <div className=\"summary\">\r\n                    <div className=\"wordsdiv\">\r\n                        <span className=\"words\">{\r\n                            text.length > 0 ? text.split(\" \").length\r\n                                            : 0\r\n                        }\r\n                        </span> <span className=\"wordstext\"> words</span>\r\n                    </div>\r\n\r\n                    <div className=\"charsdiv\">\r\n                        <span className=\"words\">{text.length}</span> <span className=\"wordstext\"> characters </span>\r\n                    </div>\r\n\r\n                    <div className=\"readdiv\">\r\n                        <span className=\"words\">{\r\n                            text.length > 0 ? (0.008 * text.split(\" \").length).toFixed(4)\r\n                                            : 0\r\n                        }\r\n                        </span> <span className=\"wordstext\"> Minutes to read</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"preview\" >\r\n                    <h2>Preview</h2>\r\n                    <p>{text.length > 0 ? text : \"Write something\"}</p>\r\n                    <button onClick={openModal} className=\"modalopenbutton\"><i className=\"fas fa-arrow-right\"></i></button>\r\n\r\n                    {\r\n\r\n\r\n                        <div className=\"modalcont\">\r\n                            <Modal style={{ border: \"3px solid green\" }} classNam=\"modal\" isOpen={modalIsOpen}\r\n                                onRequestClose={closeModal}\r\n                                style={customStyles}\r\n                                contentLabel=\"Example Modal\">\r\n\r\n                                <div >\r\n                                    <div>\r\n                                        <button className=\"modalcopyutton\" onClick={() => {\r\n                                            navigator.clipboard.writeText(text + \"  𝕮𝖔𝖕𝖎𝖊𝖉 𝕱𝖗𝖔𝖒 𝕿𝖊𝖝𝖙𝕸𝖔𝖉𝖎\")\r\n                                            setIsCopied(true)\r\n                                            setInterval(() => {\r\n                                                setIsCopied(false)\r\n                                            }, 3000);\r\n                                        }} >\r\n                                            Copy Text\r\n                                        </button>\r\n                                        {\r\n                                            isCopied ? <i class=\"fas fa-check-circle\"></i>\r\n                                                : null\r\n                                        }\r\n                                        <button className=\"modalclosebutton\" onClick={() => setIsOpen(false)} ><i className=\"fas fa-times\"></i></button>\r\n                                        <h1>Preview</h1>\r\n                                    </div>\r\n                                    <div>\r\n                                        {text}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </Modal>\r\n                        </div>\r\n\r\n                    }\r\n                   \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextContiner\r\n","import { useState } from \"react\"\nimport Alert from \"./components/Alert\";\nimport Header from \"./components/Header\"\nimport TextContiner from \"./components/TextContiner\"\n\n\nfunction App() {\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (type, text) => {\n    setAlert({\n        type,\n        msg: text \n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Alert alert={alert}/>\n      <TextContiner showAlert={showAlert}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}